name: Pulumi
on:
  push:
    # branches:
    #   - ${{ github.event.repository.default_branch }}

env:
  ENV: dev

permissions:
  id-token: write

jobs:
  package:
    name: Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir:
          - ingester
    steps:
      - uses: actions/checkout@v2
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build package
        run: mvn --batch-mode package
        working-directory: ${{matrix.dir}}/app
      - uses: actions/upload-artifact@v3
        with:
          name: jar
          path: ${{matrix.dir}}/app/target/${{matrix.dir}}-*-aws.jar

  bootstrap:
    name: Get Bootstrap Variables
    runs-on: ubuntu-latest
    outputs:
      cloud-url: ${{steps.bootstrap.outputs.cloud-url}}
      secrets-provider: ${{steps.bootstrap.outputs.secrets-provider}}
      aws-role: ${{steps.bootstrap.outputs.aws-role}}
      aws-region: ${{steps.bootstrap.outputs.aws-region}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - name: set bootstrap variables
        id: bootstrap
        run: |
          pulumi login file://..
          echo "::set-output name=cloud-url::$(
            pulumi stack output --stack bootstrap-${{env.ENV}} 'bucket name'
          )"
          echo "::set-output name=secrets-provider::$(
            pulumi stack output --stack bootstrap-${{env.ENV}} 'secrets provider'
          )"
          echo "::set-output name=aws-role::$(
            pulumi stack output --stack bootstrap-${{env.ENV}} 'ci role'
          )"
          echo "::set-output name=aws-region::$(
            pulumi config get --stack bootstrap-${{env.ENV}} aws-native:region
          )"
          pulumi logout
        env:
          PULUMI_CONFIG_PASSPHRASE: ''
        working-directory: bootstrap

  shared:
    name: Deploy Shared
    needs: bootstrap
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        dir:
          - shared-network
          - shared-kafka
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{needs.bootstrap.outputs.aws-role}}
          aws-region: ${{needs.bootstrap.outputs.aws-region}}
      - uses: pulumi/actions@v3
        with:
          command: up
          stack-name: ${{matrix.dir}}-inf-${{env.ENV}}
          work-dir: ./${{matrix.dir}}/inf
          cloud-url: ${{needs.bootstrap.outputs.cloud-url}} 
          secrets-provider: ${{needs.bootstrap.outputs.secrets-provider}} 

  applications:
    name: Deploy Applications
    needs:
      - package
      - bootstrap
      - shared
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir:
          - ingester
          # - hastags
          # - visualise
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
        # this step will trigger a warning for non-application jobs
      - uses: actions/download-artifact@v3
        with:
          name: jar
          path: ${{matrix.dir}}/app/target/
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{needs.bootstrap.outputs.aws-role}}
          aws-region: ${{needs.bootstrap.outputs.region}}
      - uses: pulumi/actions@v3
        with:
          command: up
          stack-name: ${{matrix.dir}}-inf-${{env.ENV}}
          work-dir: ./${{matrix.dir}}/inf
          cloud-url: ${{needs.bootstrap.outputs.cloud-url}} 
          secrets-provider: ${{needs.bootstrap.outputs.secrets-provider}}
